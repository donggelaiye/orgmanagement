<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ucarinc.orgmanagement.dao.AccountMapper" >
    <resultMap id="BaseResultMap" type="com.ucarinc.orgmanagement.entity.Account" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="account_login" property="accountLogin" jdbcType="VARCHAR" />
        <result column="account_password" property="accountPassword" jdbcType="VARCHAR" />
        <result column="is_link_emp" property="isLinkEmp" jdbcType="TINYINT" />
        <result column="emp_id" property="empId" jdbcType="BIGINT" />
        <result column="account_email" property="accountEmail" jdbcType="VARCHAR" />
        <result column="data_permission_id" property="dataPermissionId" jdbcType="INTEGER" />
        <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
        <result column="create_emp" property="createEmp" jdbcType="BIGINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_emp" property="modifyEmp" jdbcType="BIGINT" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Column_List" >
      a.id, a.account_login, a.account_password, a.is_link_emp, a.emp_id, a.account_email,
      a.data_permission_id, a.is_delete, a.create_emp, a.create_time, a.modify_emp, a.modify_time,
      a.status, a.remark,e.emp_name,d.dept_name,e.emp_depart
    </sql>

    <sql id="Base_Column_List" >
      id, account_login, account_password, is_link_emp, emp_id, account_email,
      data_permission_id, is_delete, create_emp, create_time, modify_emp, modify_time,
      status, remark
    </sql>

    <select id="selectByLoginAccount" resultType="com.ucarinc.orgmanagement.entity.Account" parameterType="String">
  select
  <include refid="Base_Column_List" />
  from t_b_account a
  where a.account_login = #{loginAccount}
</select>
  <select id="selectByLoginOnly" resultType="int" parameterType="String">
    select count(*)
    from t_b_account a
    where a.account_login = #{loginAccount}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from t_b_account
    where id = #{id,jdbcType=BIGINT}
  </select>

  <!--插入账号数据-->
  <insert id="insert" parameterType="com.ucarinc.orgmanagement.entity.Account" >
    insert into t_b_account (account_login,
      account_password, is_link_emp, emp_id,
      account_email, data_permission_id, is_delete,
      create_emp, create_time, modify_emp,
      modify_time, status, remark
      )
    values (#{accountLogin},
      #{accountPassword,jdbcType=VARCHAR}, #{isLinkEmp,jdbcType=TINYINT},
       #{empId,jdbcType=BIGINT},#{accountEmail,jdbcType=VARCHAR},
      #{dataPermissionId,jdbcType=INTEGER},0,
       #{createEmp,jdbcType=BIGINT},  #{createTime,jdbcType=TIMESTAMP},
      #{modifyEmp,jdbcType=BIGINT},#{modifyTime,jdbcType=TIMESTAMP},
       #{status,jdbcType=TINYINT},#{remark,jdbcType=VARCHAR}
      )
  </insert>

  <!--判断是否之前有冻结-->
  <select id="selectFreeze" resultType="java.lang.Integer" parameterType="String">
    select count(*) from t_b_account where account_login = #{accountLogin} and status = 0
  </select>

  <!--判断是否之前有解冻-->
  <select id="selectUnfreeze" resultType="java.lang.Integer" parameterType="String">
    select count(*) from t_b_account where account_login = #{accountLogin} and status = 1
  </select>

  <!--判断是否之前有删除-->
  <select id="selectDelete" resultType="java.lang.Integer" parameterType="String">
    select count(*) from t_b_account where account_login = #{accountLogin} and status = 2
  </select>


  <!-- 插入新账号数据 -->
  <insert id="insertSelective" parameterType="com.ucarinc.orgmanagement.entity.Account" >
    insert into t_b_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="accountLogin != null" >
        account_login,
      </if>
      <if test="accountPassword != null" >
        account_password,
      </if>
      <if test="isLinkEmp != null" >
        is_link_emp,
      </if>
      <if test="empId != null" >
        emp_id,
      </if>
      <if test="accountEmail != null" >
        account_email,
      </if>
      <if test="dataPermissionId != null" >
        data_permission_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createEmp != null" >
        create_emp,
      </if>
        create_time ,
      <if test="modifyEmp != null" >
        modify_emp,
      </if>
        modify_time ,
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="accountLogin != null" >
        #{accountLogin,jdbcType=VARCHAR},
      </if>
      <if test="accountPassword != null" >
        #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="isLinkEmp != null" >
        #{isLinkEmp,jdbcType=TINYINT},
      </if>
      <if test="empId != null" >
        #{empId,jdbcType=BIGINT},
      </if>
      <if test="accountEmail != null" >
        #{accountEmail,jdbcType=VARCHAR},
      </if>
      <if test="dataPermissionId != null" >
        #{dataPermissionId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createEmp != null" >
        #{createEmp,jdbcType=BIGINT},
      </if>
        current_time,
      <if test="modifyEmp != null" >
        #{modifyEmp,jdbcType=BIGINT},
      </if>
       current_time,
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.ucarinc.orgmanagement.entity.Account" >
    update t_b_account
    <set >
      <if test="accountLogin != null" >
        account_login = #{accountLogin,jdbcType=VARCHAR},
      </if>
      <if test="accountPassword != null" >
        account_password = #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="isLinkEmp != null" >
        is_link_emp = #{isLinkEmp,jdbcType=TINYINT},
      </if>
      <if test="empId != null" >
        emp_id = #{empId,jdbcType=BIGINT},
      </if>
      <if test="accountEmail != null" >
        account_email = #{accountEmail,jdbcType=VARCHAR},
      </if>
      <if test="dataPermissionId != null" >
        data_permission_id = #{dataPermissionId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="createEmp != null" >
        create_emp = #{createEmp,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyEmp != null" >
        modify_emp = #{modifyEmp,jdbcType=BIGINT},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--通过登录账号更改信息-->
  <update id="updateModifyEmp" parameterType="com.ucarinc.orgmanagement.entity.Account" >
    update t_b_account
    <set >
      <if test="modifyEmp != null" >
        modify_emp = #{modifyEmp,jdbcType=BIGINT},
      </if>
        modify_time = current_time ,
    </set>
    where account_login = #{accountLogin,jdbcType=VARCHAR}
  </update>

  <!--通过登录账号更改信息-->
  <update id="updateByLoginAccount" parameterType="com.ucarinc.orgmanagement.entity.Account" >
    update t_b_account
    <set >
      <if test="accountPassword != null" >
        account_password = #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="isLinkEmp != null" >
        is_link_emp = #{isLinkEmp,jdbcType=TINYINT},
      </if>
      <if test="empId != null" >
        emp_id = #{empId,jdbcType=BIGINT},
      </if>
      <if test="accountEmail != null" >
        account_email = #{accountEmail,jdbcType=VARCHAR},
      </if>
      <if test="dataPermissionId != null" >
        data_permission_id = #{dataPermissionId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="modifyEmp != null" >
        modify_emp = #{modifyEmp,jdbcType=BIGINT},
      </if>
        modify_time = current_time ,
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where account_login = #{accountLogin,jdbcType=VARCHAR}
  </update>

  <update id="logicalDeleteByLoginAccount">
    update t_b_account
    set status = #{@com.ucarinc.orgmanagement.common.Constant@IS_DELETED_YES}
    where account_login = #{loginAccount,jdbcType=VARCHAR}
  </update>

  <!--删除-->
  <update id="updateByIsDeleted" parameterType="String">
    update t_b_account
    set status = 2,is_delete = 1
    where account_login = #{loginAccount,jdbcType=VARCHAR}
  </update>

  <!--解冻-->
  <update id="updateByUnfreeze" parameterType="String">
    update t_b_account
    set status = 1
    where account_login = #{loginAccount,jdbcType=VARCHAR}
   </update>

  <!--冻结-->
  <update id="updateByFreeze" parameterType="String">
    update t_b_account
    set status = 0
    where account_login = #{loginAccount,jdbcType=VARCHAR}
  </update>

  <!-- 获取账号数据集合 -->
  <!-- is_deleted字段要改 -->
  <select id="getAccountList" resultType="com.ucarinc.orgmanagement.entity.vo.AccountResult"
          parameterType="com.ucarinc.orgmanagement.entity.form.AccountSearchForm">
    select
    <include refid="Column_List" />
    from (t_b_account a left join t_b_employee e on a.emp_id = e.emp_id)
    left join t_b_dept d on e.emp_depart = d.dept_id
     <where >
      <if test="accountLogin != null and accountLogin != ''" >
        and a.account_login like concat(#{accountLogin},'%')
      </if>
       <if test="accountName != null and accountName != ''">
         and a.account_login = #{accountName}
       </if>
      <if test="isLinkEmp != null" >
        and a.is_link_emp = #{isLinkEmp}
      </if>
      <if test="empId != null and empId !=''" >
        and a.emp_id like concat(#{empId},'%')
      </if>
      <if test="dataPermissionId != null " >
        and a.data_permission_id = #{dataPermissionId}
      </if>
      <if test="status != null" >
        and a.status = #{status}
      </if>
      <if test="empName !=null and empName != '' ">
        and e.emp_name like concat(#{empName},'%')
      </if>
      <if test="empDepart !=null and empDepart != '' ">
        and d.dept_id like concat(#{empDepart},'%')
      </if>
      <if test="grantDeptList !=null">
        and d.dept_id in
        <foreach collection="grantDeptList" item="deptId" open="(" separator="," close=")">
          #{deptId}
        </foreach>
      </if>
     </where>
    order by a.modify_time desc
  </select>

  <!--获取列表-->
  <select id="getAccount" resultType="com.ucarinc.orgmanagement.entity.vo.AccountResult"
          parameterType="String">
    select
    <include refid="Column_List" />
    from (t_b_account a left join t_b_employee e on a.emp_id = e.emp_id)
    left join t_b_dept d on e.emp_depart = d.dept_id
    where a.account_login = #{loginAccount,jdbcType=VARCHAR}
  </select>

  <select id="getAccountByLogin" resultType="com.ucarinc.orgmanagement.entity.Account"
          parameterType="String">
    select
    <include refid="Column_List" />
    from (t_b_account a left join t_b_employee e on a.emp_id = e.emp_id)
    left join t_b_dept d on e.emp_depart = d.dept_id
    where a.account_login = #{loginAccount,jdbcType=VARCHAR}
  </select>

  <!--根据账号查密码-->
  <select id="getAccountPassword" resultType="String" parameterType="String">
    select
    account_password
    from t_b_account
    where account_login = #{accountLogin}
  </select>


  <!--根据账号修改密码-->
  <update id="updateAccountPassword" >
    update t_b_account
    set account_password = #{accountPassword}
    where account_login = #{accountLogin}
  </update>

  <select id="getAccountSelectByLogin" resultType="com.ucarinc.orgmanagement.entity.form.AccountSelectForm"
          parameterType="String">
    select
    <include refid="Column_List" />
    from (t_b_account a left join t_b_employee e on a.emp_id = e.emp_id)
    left join t_b_dept d on e.emp_depart = d.dept_id
    where a.account_login = #{loginAccount,jdbcType=VARCHAR}
  </select>

  <!-- 获取有效的账号数据集合 -->
  <select id="getValidAccountList" resultType="com.ucarinc.orgmanagement.entity.vo.AccountResult"
          parameterType="com.ucarinc.orgmanagement.entity.form.AccountSearchForm">
    select
    <include refid="Column_List" />
    from (t_b_account a left join t_b_employee e on a.emp_id = e.emp_id)
    left join t_b_dept d on e.emp_depart = d.dept_id
    where a.is_delete = ${@com.ucarinc.orgmanagement.common.Constant@IS_DELETED_NO}
    <if test="accountLogin != null and accountLogin != ''" >
      and a.account_login like concat(#{accountLogin},'%')
    </if>
    <if test="isLinkEmp != null" >
      and a.is_link_emp = #{isLinkEmp}
    </if>
    <if test="empId != null and empId !=''" >
      and a.emp_id like concat(#{empId},'%')
    </if>
    <if test="dataPermissionId != null " >
      and a.data_permission_id = #{dataPermissionId}
    </if>
    <if test="status != null" >
      and a.status = #{status}
    </if>
    <if test="empName !=null and empName != '' ">
      and e.emp_name like concat(#{empName},'%')
    </if>
    <if test="empDepart !=null and empDepart != '' ">
      and d.dept_id like concat(#{empDepart},'%')
    </if>
    <if test="grantDeptList !=null">
      and d.dept_id in
      <foreach collection="grantDeptList" item="deptId" open="(" separator="," close=")">
        #{deptId}
      </foreach>
    </if>
    order by a.modify_time desc
  </select>

</mapper>
